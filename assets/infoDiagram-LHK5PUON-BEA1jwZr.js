import{_ as e,l as o,H as i,e as n,I as p}from"./mermaid.core-eyY_9ix_.js";import{p as m}from"./treemap-75Q7IDZK-_S9ccXCx.js";import"./index-DfQF0oAB.js";import"./purify.es-CQJ0hv7W.js";import"./merge-C2MlVkhO.js";import"./_baseUniq-D4idWuzg.js";import"./_baseEach-CSgP2OB4.js";import"./map-B6unp2GH.js";import"./min-BQ2GZN0P.js";import"./flatMap-CVVhbvnp.js";var g={parse:e(async r=>{const a=await m("info",r);o.debug(a)},"parse")},v={version:p.version+""},d=e(()=>v.version,"getVersion"),c={getVersion:d},l=e((r,a,s)=>{o.debug(`rendering info diagram
`+r);const t=i(a);n(t,100,400,!0),t.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${s}`)},"draw"),f={draw:l},I={parser:g,db:c,renderer:f};export{I as diagram};
